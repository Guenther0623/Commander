#############################################################################
# Makefile for building: Commander
# Generated by qmake (2.01a) (Qt 4.8.7) on: Tue Nov 27 15:06:20 2018
# Project:  commander.pro
# Template: app app
# Command: /usr/bin/qmake-qt4 -o Makefile commander.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -std=c++0x -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu -lserial -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		arduino.cpp \
		FishingHole/fishinghole.cpp \
		FishingHole/expFishThread.cpp \
		FishingHole/fishLogger.cpp \
		CircleMaze/circleMaze.cpp \
		CircleMaze/expCircleThread.cpp \
		CircleMaze/circleLogger.cpp moc_mainwindow.cpp \
		moc_fishinghole.cpp \
		moc_expFishThread.cpp \
		moc_circleMaze.cpp \
		moc_expCircleThread.cpp
OBJECTS       = main.o \
		mainwindow.o \
		arduino.o \
		fishinghole.o \
		expFishThread.o \
		fishLogger.o \
		circleMaze.o \
		expCircleThread.o \
		circleLogger.o \
		moc_mainwindow.o \
		moc_fishinghole.o \
		moc_expFishThread.o \
		moc_circleMaze.o \
		moc_expCircleThread.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		commander.pro
QMAKE_TARGET  = Commander
DESTDIR       = 
TARGET        = Commander

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: commander.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile commander.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile commander.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Commander1.0.0 || $(MKDIR) .tmp/Commander1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Commander1.0.0/ && $(COPY_FILE) --parents mainwindow.h arduino.h FishingHole/fishinghole.h FishingHole/expFishThread.h FishingHole/fishLogger.h CircleMaze/circleMaze.h CircleMaze/expCircleThread.h CircleMaze/circleLogger.h .tmp/Commander1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp arduino.cpp FishingHole/fishinghole.cpp FishingHole/expFishThread.cpp FishingHole/fishLogger.cpp CircleMaze/circleMaze.cpp CircleMaze/expCircleThread.cpp CircleMaze/circleLogger.cpp .tmp/Commander1.0.0/ && (cd `dirname .tmp/Commander1.0.0` && $(TAR) Commander1.0.0.tar Commander1.0.0 && $(COMPRESS) Commander1.0.0.tar) && $(MOVE) `dirname .tmp/Commander1.0.0`/Commander1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Commander1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_fishinghole.cpp moc_expFishThread.cpp moc_circleMaze.cpp moc_expCircleThread.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_fishinghole.cpp moc_expFishThread.cpp moc_circleMaze.cpp moc_expCircleThread.cpp
moc_mainwindow.cpp: CircleMaze/circleMaze.h \
		arduino.h \
		CircleMaze/circleLogger.h \
		defines.h \
		CircleMaze/expCircleThread.h \
		FishingHole/fishinghole.h \
		FishingHole/expFishThread.h \
		FishingHole/fishLogger.h \
		mainwindow.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_fishinghole.cpp: arduino.h \
		FishingHole/expFishThread.h \
		FishingHole/fishLogger.h \
		FishingHole/fishinghole.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) FishingHole/fishinghole.h -o moc_fishinghole.cpp

moc_expFishThread.cpp: FishingHole/expFishThread.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) FishingHole/expFishThread.h -o moc_expFishThread.cpp

moc_circleMaze.cpp: arduino.h \
		CircleMaze/circleLogger.h \
		defines.h \
		CircleMaze/expCircleThread.h \
		CircleMaze/circleMaze.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) CircleMaze/circleMaze.h -o moc_circleMaze.cpp

moc_expCircleThread.cpp: CircleMaze/expCircleThread.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) CircleMaze/expCircleThread.h -o moc_expCircleThread.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		CircleMaze/circleMaze.h \
		arduino.h \
		CircleMaze/circleLogger.h \
		defines.h \
		CircleMaze/expCircleThread.h \
		FishingHole/fishinghole.h \
		FishingHole/expFishThread.h \
		FishingHole/fishLogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		CircleMaze/circleMaze.h \
		arduino.h \
		CircleMaze/circleLogger.h \
		defines.h \
		CircleMaze/expCircleThread.h \
		FishingHole/fishinghole.h \
		FishingHole/expFishThread.h \
		FishingHole/fishLogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

arduino.o: arduino.cpp defines.h \
		arduino.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o arduino.o arduino.cpp

fishinghole.o: FishingHole/fishinghole.cpp FishingHole/fishinghole.h \
		arduino.h \
		FishingHole/expFishThread.h \
		FishingHole/fishLogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fishinghole.o FishingHole/fishinghole.cpp

expFishThread.o: FishingHole/expFishThread.cpp arduino.h \
		defines.h \
		FishingHole/expFishThread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o expFishThread.o FishingHole/expFishThread.cpp

fishLogger.o: FishingHole/fishLogger.cpp FishingHole/fishLogger.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fishLogger.o FishingHole/fishLogger.cpp

circleMaze.o: CircleMaze/circleMaze.cpp CircleMaze/circleMaze.h \
		arduino.h \
		CircleMaze/circleLogger.h \
		defines.h \
		CircleMaze/expCircleThread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o circleMaze.o CircleMaze/circleMaze.cpp

expCircleThread.o: CircleMaze/expCircleThread.cpp arduino.h \
		defines.h \
		CircleMaze/expCircleThread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o expCircleThread.o CircleMaze/expCircleThread.cpp

circleLogger.o: CircleMaze/circleLogger.cpp CircleMaze/circleLogger.h \
		defines.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o circleLogger.o CircleMaze/circleLogger.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_fishinghole.o: moc_fishinghole.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_fishinghole.o moc_fishinghole.cpp

moc_expFishThread.o: moc_expFishThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_expFishThread.o moc_expFishThread.cpp

moc_circleMaze.o: moc_circleMaze.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_circleMaze.o moc_circleMaze.cpp

moc_expCircleThread.o: moc_expCircleThread.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_expCircleThread.o moc_expCircleThread.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

